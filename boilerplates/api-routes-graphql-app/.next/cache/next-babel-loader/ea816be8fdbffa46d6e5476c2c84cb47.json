{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/ilancaster/Desktop/next-js-learning/boilerplates/api-routes-graphql-app/pages/index.js\";\nimport React from \"react\";\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(_ref) {\n  var users = _ref.users;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, users.map(function (user, i) {\n    return React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, user.name);\n  }));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var response, _ref3, users;\n\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('http://localhost:3000/api/graphql', {\n            method: 'POST',\n            headers: {\n              'Content-type': 'application/json'\n            },\n            body: _JSON$stringify({\n              query: '{ users { name } }'\n            })\n          });\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return response.json();\n\n        case 5:\n          _ref3 = _context.sent;\n          users = _ref3.data.users;\n          return _context.abrupt(\"return\", {\n            users: users\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":{"version":3,"sources":["/Users/ilancaster/Desktop/next-js-learning/boilerplates/api-routes-graphql-app/pages/index.js"],"names":["fetch","Index","users","map","user","i","name","getInitialProps","method","headers","body","query","response","json","data"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP;AAAA,WACT;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcD,IAAI,CAACE,IAAnB,CADS;AAAA,GAAV,CADH,CADY;AAAA,CAAd;;AAQAL,KAAK,CAACM,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACCP,KAAK,CAAC,mCAAD,EAAsC;AAChEQ,YAAAA,MAAM,EAAE,MADwD;AAEhEC,YAAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFuD;AAKhEC,YAAAA,IAAI,EAAE,gBAAe;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAf;AAL0D,WAAtC,CADN;;AAAA;AAChBC,UAAAA,QADgB;AAAA;AAAA,iBAWZA,QAAQ,CAACC,IAAT,EAXY;;AAAA;AAAA;AAUZX,UAAAA,KAVY,SAUpBY,IAVoB,CAUZZ,KAVY;AAAA,2CAaf;AAAEA,YAAAA,KAAK,EAALA;AAAF,WAbe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAgBA,eAAeD,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nconst Index = ({ users }) => (\n  <div>\n    {users.map((user, i) => (\n      <div key={i}>{user.name}</div>\n    ))}\n  </div>\n)\n\nIndex.getInitialProps = async () => {\n  const response = await fetch('http://localhost:3000/api/graphql', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify({ query: '{ users { name } }' })\n  })\n\n  const {\n    data: { users }\n  } = await response.json()\n\n  return { users }\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}