{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/ilancaster/Desktop/next-js-learning/boilerplates/api-routes-graphql-app/pages/index.js\";\nimport React from \"react\";\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = ({\n  users\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4\n  },\n  __self: this\n}, users.map((user, i) => React.createElement(\"div\", {\n  key: i,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, user.name)));\n\nIndex.getInitialProps = async () => {\n  const response = await fetch('http://localhost:3000/api/graphql', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: _JSON$stringify({\n      query: '{ users { name } }'\n    })\n  });\n  const {\n    data: {\n      users\n    }\n  } = await response.json();\n  return {\n    users\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/ilancaster/Desktop/next-js-learning/boilerplates/api-routes-graphql-app/pages/index.js"],"names":["fetch","Index","users","map","user","i","name","getInitialProps","response","method","headers","body","query","data","json"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KACT;AAAK,EAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAcD,IAAI,CAACE,IAAnB,CADD,CADH,CADF;;AAQAL,KAAK,CAACM,eAAN,GAAwB,YAAY;AAClC,QAAMC,QAAQ,GAAG,MAAMR,KAAK,CAAC,mCAAD,EAAsC;AAChES,IAAAA,MAAM,EAAE,MADwD;AAEhEC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFuD;AAKhEC,IAAAA,IAAI,EAAE,gBAAe;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAf;AAL0D,GAAtC,CAA5B;AAQA,QAAM;AACJC,IAAAA,IAAI,EAAE;AAAEX,MAAAA;AAAF;AADF,MAEF,MAAMM,QAAQ,CAACM,IAAT,EAFV;AAIA,SAAO;AAAEZ,IAAAA;AAAF,GAAP;AACD,CAdD;;AAgBA,eAAeD,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nconst Index = ({ users }) => (\n  <div>\n    {users.map((user, i) => (\n      <div key={i}>{user.name}</div>\n    ))}\n  </div>\n)\n\nIndex.getInitialProps = async () => {\n  const response = await fetch('http://localhost:3000/api/graphql', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify({ query: '{ users { name } }' })\n  })\n\n  const {\n    data: { users }\n  } = await response.json()\n\n  return { users }\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}