{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updatePost($id: ID!, $votes: Int) {\\n    updatePost(id: $id, votes: $votes) {\\n      id\\n      __typename\\n      votes\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PostVoteButton from './PostVoteButton';\n\nfunction PostVoteUp(_ref) {\n  var upvote = _ref.upvote,\n      votes = _ref.votes,\n      id = _ref.id;\n  return React.createElement(PostVoteButton, {\n    id: id,\n    votes: votes,\n    className: \"upvote\",\n    onClickHandler: function onClickHandler() {\n      return upvote(id, votes + 1);\n    }\n  });\n}\n\nvar upvotePost = gql(_templateObject());\nexport default graphql(upvotePost, {\n  props: function props(_ref2) {\n    var ownProps = _ref2.ownProps,\n        mutate = _ref2.mutate;\n    return {\n      upvote: function upvote(id, votes) {\n        return mutate({\n          variables: {\n            id: id,\n            votes: votes\n          },\n          optimisticResponse: {\n            __typename: 'Mutation',\n            updatePost: {\n              __typename: 'Post',\n              id: ownProps.id,\n              votes: ownProps.votes + 1\n            }\n          }\n        });\n      }\n    };\n  }\n})(PostVoteUp);","map":{"version":3,"sources":["/Users/ilancaster/Desktop/next-js-learning/boilerplates/with-apollo-and-redux-saga-app/components/PostVoteUp.js"],"names":["React","graphql","gql","PostVoteButton","PostVoteUp","upvote","votes","id","upvotePost","props","ownProps","mutate","variables","optimisticResponse","__typename","updatePost"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,SAASC,UAAT,OAA4C;AAAA,MAArBC,MAAqB,QAArBA,MAAqB;AAAA,MAAbC,KAAa,QAAbA,KAAa;AAAA,MAANC,EAAM,QAANA,EAAM;AAC1C,SACE,oBAAC,cAAD;AACE,IAAA,EAAE,EAAEA,EADN;AAEE,IAAA,KAAK,EAAED,KAFT;AAGE,IAAA,SAAS,EAAC,QAHZ;AAIE,IAAA,cAAc,EAAE;AAAA,aAAMD,MAAM,CAACE,EAAD,EAAKD,KAAK,GAAG,CAAb,CAAZ;AAAA;AAJlB,IADF;AAQD;;AAED,IAAME,UAAU,GAAGN,GAAH,mBAAhB;AAUA,eAAeD,OAAO,CAACO,UAAD,EAAa;AACjCC,EAAAA,KAAK,EAAE;AAAA,QAAGC,QAAH,SAAGA,QAAH;AAAA,QAAaC,MAAb,SAAaA,MAAb;AAAA,WAA2B;AAChCN,MAAAA,MAAM,EAAE,gBAACE,EAAD,EAAKD,KAAL;AAAA,eACNK,MAAM,CAAC;AACLC,UAAAA,SAAS,EAAE;AAAEL,YAAAA,EAAE,EAAFA,EAAF;AAAMD,YAAAA,KAAK,EAALA;AAAN,WADN;AAELO,UAAAA,kBAAkB,EAAE;AAClBC,YAAAA,UAAU,EAAE,UADM;AAElBC,YAAAA,UAAU,EAAE;AACVD,cAAAA,UAAU,EAAE,MADF;AAEVP,cAAAA,EAAE,EAAEG,QAAQ,CAACH,EAFH;AAGVD,cAAAA,KAAK,EAAEI,QAAQ,CAACJ,KAAT,GAAiB;AAHd;AAFM;AAFf,SAAD,CADA;AAAA;AADwB,KAA3B;AAAA;AAD0B,CAAb,CAAP,CAeZF,UAfY,CAAf","sourcesContent":["import React from 'react'\nimport { graphql } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport PostVoteButton from './PostVoteButton'\n\nfunction PostVoteUp ({ upvote, votes, id }) {\n  return (\n    <PostVoteButton\n      id={id}\n      votes={votes}\n      className='upvote'\n      onClickHandler={() => upvote(id, votes + 1)}\n    />\n  )\n}\n\nconst upvotePost = gql`\n  mutation updatePost($id: ID!, $votes: Int) {\n    updatePost(id: $id, votes: $votes) {\n      id\n      __typename\n      votes\n    }\n  }\n`\n\nexport default graphql(upvotePost, {\n  props: ({ ownProps, mutate }) => ({\n    upvote: (id, votes) =>\n      mutate({\n        variables: { id, votes },\n        optimisticResponse: {\n          __typename: 'Mutation',\n          updatePost: {\n            __typename: 'Post',\n            id: ownProps.id,\n            votes: ownProps.votes + 1\n          }\n        }\n      })\n  })\n})(PostVoteUp)\n"]},"metadata":{},"sourceType":"module"}