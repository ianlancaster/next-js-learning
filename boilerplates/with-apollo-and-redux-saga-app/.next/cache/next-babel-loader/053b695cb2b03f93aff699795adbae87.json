{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { startClock } from '../lib/clock/actions';\nimport { countIncrease } from '../lib/count/actions';\nimport { loadData } from '../lib/placeholder/actions';\nimport App from '../components/App';\nimport Header from '../components/Header';\nimport Page from '../components/Page';\n\nvar PageIndex =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PageIndex, _React$Component);\n\n  function PageIndex() {\n    _classCallCheck(this, PageIndex);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PageIndex).apply(this, arguments));\n  }\n\n  _createClass(PageIndex, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(startClock());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(App, null, React.createElement(Header, null), React.createElement(Page, {\n        title: \"Home Page\"\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var store;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                store = _ref.ctx.store;\n                store.dispatch(countIncrease());\n\n                if (!store.getState().placeholder.data) {\n                  store.dispatch(loadData());\n                }\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return PageIndex;\n}(React.Component);\n\nexport default connect()(PageIndex);","map":{"version":3,"sources":["/Users/ilancaster/Desktop/next-js-learning/boilerplates/with-apollo-and-redux-saga-app/pages/index.js"],"names":["React","connect","startClock","countIncrease","loadData","App","Header","Page","PageIndex","props","dispatch","store","ctx","getState","placeholder","data","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,QAAT,QAAyB,4BAAzB;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;IAEMC,S;;;;;;;;;;;;;wCAQiB;AACnB,WAAKC,KAAL,CAAWC,QAAX,CAAoBR,UAAU,EAA9B;AACD;;;6BAES;AACR,aACE,oBAAC,GAAD,QACE,oBAAC,MAAD,OADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC;AAAZ,QAFF,CADF;AAMD;;;;;;;;;;;;AAlBsCS,gBAAAA,K,QAAPC,G,CAAOD,K;AACrCA,gBAAAA,KAAK,CAACD,QAAN,CAAeP,aAAa,EAA5B;;AACA,oBAAI,CAACQ,KAAK,CAACE,QAAN,GAAiBC,WAAjB,CAA6BC,IAAlC,EAAwC;AACtCJ,kBAAAA,KAAK,CAACD,QAAN,CAAeN,QAAQ,EAAvB;AACD;;;;;;;;;;;;;;;;;;;EALmBJ,KAAK,CAACgB,S;;AAsB9B,eAAef,OAAO,GAAGO,SAAH,CAAtB","sourcesContent":["import React from 'react'\n\nimport { connect } from 'react-redux'\n\nimport { startClock } from '../lib/clock/actions'\nimport { countIncrease } from '../lib/count/actions'\nimport { loadData } from '../lib/placeholder/actions'\n\nimport App from '../components/App'\nimport Header from '../components/Header'\nimport Page from '../components/Page'\n\nclass PageIndex extends React.Component {\n  static async getInitialProps ({ ctx: { store } }) {\n    store.dispatch(countIncrease())\n    if (!store.getState().placeholder.data) {\n      store.dispatch(loadData())\n    }\n  }\n\n  componentDidMount () {\n    this.props.dispatch(startClock())\n  }\n\n  render () {\n    return (\n      <App>\n        <Header />\n        <Page title='Home Page' />\n      </App>\n    )\n  }\n}\n\nexport default connect()(PageIndex)\n"]},"metadata":{},"sourceType":"module"}