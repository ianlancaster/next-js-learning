{"ast":null,"code":"import { composeWithDevTools } from 'redux-devtools-extension';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport nextReduxWrapper from 'next-redux-wrapper';\nimport nextReduxSaga from 'next-redux-saga';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\nvar sagaMiddleware = createSagaMiddleware();\nexport function configureStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\nexport default function (BaseComponent) {\n  return nextReduxWrapper(configureStore)(nextReduxSaga(BaseComponent));\n}","map":{"version":3,"sources":["/Users/ilancaster/Desktop/next-js-learning/boilerplates/with-apollo-and-redux-saga-app/lib/withReduxSaga.js"],"names":["composeWithDevTools","createStore","applyMiddleware","createSagaMiddleware","nextReduxWrapper","nextReduxSaga","rootReducer","rootSaga","sagaMiddleware","configureStore","initialState","store","sagaTask","run","BaseComponent"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,0BAApC;AAEA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AAEA,OAAO,SAASM,cAAT,GAA4C;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AACjD,MAAMC,KAAK,GAAGV,WAAW,CACvBK,WADuB,EAEvBI,YAFuB,EAGvBV,mBAAmB,CAACE,eAAe,CAACM,cAAD,CAAhB,CAHI,CAAzB;AAKAG,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBN,QAAnB,CAAjB;AACA,SAAOI,KAAP;AACD;AAED,eAAe,UAAUG,aAAV,EAAyB;AACtC,SAAOV,gBAAgB,CAACK,cAAD,CAAhB,CAAiCJ,aAAa,CAACS,aAAD,CAA9C,CAAP;AACD","sourcesContent":["import { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport nextReduxWrapper from 'next-redux-wrapper'\nimport nextReduxSaga from 'next-redux-saga'\n\nimport rootReducer from './rootReducer'\nimport rootSaga from './rootSaga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nexport function configureStore (initialState = {}) {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(sagaMiddleware))\n  )\n  store.sagaTask = sagaMiddleware.run(rootSaga)\n  return store\n}\n\nexport default function (BaseComponent) {\n  return nextReduxWrapper(configureStore)(nextReduxSaga(BaseComponent))\n}\n"]},"metadata":{},"sourceType":"module"}