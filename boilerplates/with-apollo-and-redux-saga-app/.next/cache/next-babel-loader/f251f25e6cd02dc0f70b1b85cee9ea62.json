{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport { graphql } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { allPosts, allPostsQueryVars } from './PostList';\n\nfunction Submit({\n  createPost\n}) {\n  function handleSubmit(event) {\n    event.preventDefault();\n    const form = event.target;\n    const formData = new window.FormData(form);\n    createPost(formData.get('title'), formData.get('url'));\n    form.reset();\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"jsx-778314498\"\n  }, React.createElement(\"h1\", {\n    className: \"jsx-778314498\"\n  }, \"Submit\"), React.createElement(\"input\", {\n    placeholder: \"title\",\n    name: \"title\",\n    type: \"text\",\n    required: true,\n    className: \"jsx-778314498\"\n  }), React.createElement(\"input\", {\n    placeholder: \"url\",\n    name: \"url\",\n    type: \"url\",\n    required: true,\n    className: \"jsx-778314498\"\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"jsx-778314498\"\n  }, \"Submit\"), React.createElement(_JSXStyle, {\n    id: \"778314498\"\n  }, \"form.jsx-778314498{border-bottom:1px solid #ececec;padding-bottom:20px;margin-bottom:20px;}input.jsx-778314498{display:block;margin-bottom:10px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbGFuY2FzdGVyL0Rlc2t0b3AvbmV4dC1qcy1sZWFybmluZy9ib2lsZXJwbGF0ZXMvd2l0aC1hcG9sbG8tYW5kLXJlZHV4LXNhZ2EtYXBwL2NvbXBvbmVudHMvU3VibWl0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNCa0IsQUFHMkMsQUFLbEIsY0FDSyxrQkFMQyxDQU10QixtQkFMcUIsbUJBQ3JCIiwiZmlsZSI6Ii9Vc2Vycy9pbGFuY2FzdGVyL0Rlc2t0b3AvbmV4dC1qcy1sZWFybmluZy9ib2lsZXJwbGF0ZXMvd2l0aC1hcG9sbG8tYW5kLXJlZHV4LXNhZ2EtYXBwL2NvbXBvbmVudHMvU3VibWl0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ3JhcGhxbCB9IGZyb20gJ3JlYWN0LWFwb2xsbydcbmltcG9ydCBncWwgZnJvbSAnZ3JhcGhxbC10YWcnXG5pbXBvcnQgeyBhbGxQb3N0cywgYWxsUG9zdHNRdWVyeVZhcnMgfSBmcm9tICcuL1Bvc3RMaXN0J1xuXG5mdW5jdGlvbiBTdWJtaXQgKHsgY3JlYXRlUG9zdCB9KSB7XG4gIGZ1bmN0aW9uIGhhbmRsZVN1Ym1pdCAoZXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXG5cbiAgICBjb25zdCBmb3JtID0gZXZlbnQudGFyZ2V0XG5cbiAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyB3aW5kb3cuRm9ybURhdGEoZm9ybSlcbiAgICBjcmVhdGVQb3N0KGZvcm1EYXRhLmdldCgndGl0bGUnKSwgZm9ybURhdGEuZ2V0KCd1cmwnKSlcblxuICAgIGZvcm0ucmVzZXQoKVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8Zm9ybSBvblN1Ym1pdD17aGFuZGxlU3VibWl0fT5cbiAgICAgIDxoMT5TdWJtaXQ8L2gxPlxuICAgICAgPGlucHV0IHBsYWNlaG9sZGVyPSd0aXRsZScgbmFtZT0ndGl0bGUnIHR5cGU9J3RleHQnIHJlcXVpcmVkIC8+XG4gICAgICA8aW5wdXQgcGxhY2Vob2xkZXI9J3VybCcgbmFtZT0ndXJsJyB0eXBlPSd1cmwnIHJlcXVpcmVkIC8+XG4gICAgICA8YnV0dG9uIHR5cGU9J3N1Ym1pdCc+U3VibWl0PC9idXR0b24+XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIGZvcm0ge1xuICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWNlY2VjO1xuICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgICAgIH1cbiAgICAgICAgaW5wdXQge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L2Zvcm0+XG4gIClcbn1cblxuY29uc3QgY3JlYXRlUG9zdCA9IGdxbGBcbiAgbXV0YXRpb24gY3JlYXRlUG9zdCgkdGl0bGU6IFN0cmluZyEsICR1cmw6IFN0cmluZyEpIHtcbiAgICBjcmVhdGVQb3N0KHRpdGxlOiAkdGl0bGUsIHVybDogJHVybCkge1xuICAgICAgaWRcbiAgICAgIHRpdGxlXG4gICAgICB2b3Rlc1xuICAgICAgdXJsXG4gICAgICBjcmVhdGVkQXRcbiAgICB9XG4gIH1cbmBcblxuZXhwb3J0IGRlZmF1bHQgZ3JhcGhxbChjcmVhdGVQb3N0LCB7XG4gIHByb3BzOiAoeyBtdXRhdGUgfSkgPT4gKHtcbiAgICBjcmVhdGVQb3N0OiAodGl0bGUsIHVybCkgPT5cbiAgICAgIG11dGF0ZSh7XG4gICAgICAgIHZhcmlhYmxlczogeyB0aXRsZSwgdXJsIH0sXG4gICAgICAgIHVwZGF0ZTogKHByb3h5LCB7IGRhdGE6IHsgY3JlYXRlUG9zdCB9IH0pID0+IHtcbiAgICAgICAgICBjb25zdCBkYXRhID0gcHJveHkucmVhZFF1ZXJ5KHtcbiAgICAgICAgICAgIHF1ZXJ5OiBhbGxQb3N0cyxcbiAgICAgICAgICAgIHZhcmlhYmxlczogYWxsUG9zdHNRdWVyeVZhcnNcbiAgICAgICAgICB9KVxuICAgICAgICAgIHByb3h5LndyaXRlUXVlcnkoe1xuICAgICAgICAgICAgcXVlcnk6IGFsbFBvc3RzLFxuICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAuLi5kYXRhLFxuICAgICAgICAgICAgICBhbGxQb3N0czogW2NyZWF0ZVBvc3QsIC4uLmRhdGEuYWxsUG9zdHNdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdmFyaWFibGVzOiBhbGxQb3N0c1F1ZXJ5VmFyc1xuICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgIH0pXG4gIH0pXG59KShTdWJtaXQpXG4iXX0= */\\n/*@ sourceURL=/Users/ilancaster/Desktop/next-js-learning/boilerplates/with-apollo-and-redux-saga-app/components/Submit.js */\"));\n}\n\nconst createPost = gql`\n  mutation createPost($title: String!, $url: String!) {\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }\n`;\nexport default graphql(createPost, {\n  props: ({\n    mutate\n  }) => ({\n    createPost: (title, url) => mutate({\n      variables: {\n        title,\n        url\n      },\n      update: (proxy, {\n        data: {\n          createPost\n        }\n      }) => {\n        const data = proxy.readQuery({\n          query: allPosts,\n          variables: allPostsQueryVars\n        });\n        proxy.writeQuery({\n          query: allPosts,\n          data: _objectSpread({}, data, {\n            allPosts: [createPost, ...data.allPosts]\n          }),\n          variables: allPostsQueryVars\n        });\n      }\n    })\n  })\n})(Submit);","map":{"version":3,"sources":["/Users/ilancaster/Desktop/next-js-learning/boilerplates/with-apollo-and-redux-saga-app/components/Submit.js"],"names":["graphql","gql","allPosts","allPostsQueryVars","Submit","createPost","handleSubmit","event","preventDefault","form","target","formData","window","FormData","get","reset","props","mutate","title","url","variables","update","proxy","data","readQuery","query","writeQuery"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAmBC,iBAAnB,QAA4C,YAA5C;;AAEA,SAASC,MAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAAiC;AAC/B,WAASC,YAAT,CAAuBC,KAAvB,EAA8B;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,IAAI,GAAGF,KAAK,CAACG,MAAnB;AAEA,UAAMC,QAAQ,GAAG,IAAIC,MAAM,CAACC,QAAX,CAAoBJ,IAApB,CAAjB;AACAJ,IAAAA,UAAU,CAACM,QAAQ,CAACG,GAAT,CAAa,OAAb,CAAD,EAAwBH,QAAQ,CAACG,GAAT,CAAa,KAAb,CAAxB,CAAV;AAEAL,IAAAA,IAAI,CAACM,KAAL;AACD;;AAED,SACE;AAAM,IAAA,QAAQ,EAAET,YAAhB;AAAA;AAAA,KACE;AAAA;AAAA,cADF,EAEE;AAAO,IAAA,WAAW,EAAC,OAAnB;AAA2B,IAAA,IAAI,EAAC,OAAhC;AAAwC,IAAA,IAAI,EAAC,MAA7C;AAAoD,IAAA,QAAQ,MAA5D;AAAA;AAAA,IAFF,EAGE;AAAO,IAAA,WAAW,EAAC,KAAnB;AAAyB,IAAA,IAAI,EAAC,KAA9B;AAAoC,IAAA,IAAI,EAAC,KAAzC;AAA+C,IAAA,QAAQ,MAAvD;AAAA;AAAA,IAHF,EAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA,cAJF;AAAA;AAAA,ilGADF;AAmBD;;AAED,MAAMD,UAAU,GAAGJ,GAAI;;;;;;;;;;CAAvB;AAYA,eAAeD,OAAO,CAACK,UAAD,EAAa;AACjCW,EAAAA,KAAK,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,MAAiB;AACtBZ,IAAAA,UAAU,EAAE,CAACa,KAAD,EAAQC,GAAR,KACVF,MAAM,CAAC;AACLG,MAAAA,SAAS,EAAE;AAAEF,QAAAA,KAAF;AAASC,QAAAA;AAAT,OADN;AAELE,MAAAA,MAAM,EAAE,CAACC,KAAD,EAAQ;AAAEC,QAAAA,IAAI,EAAE;AAAElB,UAAAA;AAAF;AAAR,OAAR,KAAqC;AAC3C,cAAMkB,IAAI,GAAGD,KAAK,CAACE,SAAN,CAAgB;AAC3BC,UAAAA,KAAK,EAAEvB,QADoB;AAE3BkB,UAAAA,SAAS,EAAEjB;AAFgB,SAAhB,CAAb;AAIAmB,QAAAA,KAAK,CAACI,UAAN,CAAiB;AACfD,UAAAA,KAAK,EAAEvB,QADQ;AAEfqB,UAAAA,IAAI,oBACCA,IADD;AAEFrB,YAAAA,QAAQ,EAAE,CAACG,UAAD,EAAa,GAAGkB,IAAI,CAACrB,QAArB;AAFR,YAFW;AAMfkB,UAAAA,SAAS,EAAEjB;AANI,SAAjB;AAQD;AAfI,KAAD;AAFc,GAAjB;AAD0B,CAAb,CAAP,CAqBZC,MArBY,CAAf","sourcesContent":["import { graphql } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { allPosts, allPostsQueryVars } from './PostList'\n\nfunction Submit ({ createPost }) {\n  function handleSubmit (event) {\n    event.preventDefault()\n\n    const form = event.target\n\n    const formData = new window.FormData(form)\n    createPost(formData.get('title'), formData.get('url'))\n\n    form.reset()\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1>Submit</h1>\n      <input placeholder='title' name='title' type='text' required />\n      <input placeholder='url' name='url' type='url' required />\n      <button type='submit'>Submit</button>\n      <style jsx>{`\n        form {\n          border-bottom: 1px solid #ececec;\n          padding-bottom: 20px;\n          margin-bottom: 20px;\n        }\n        input {\n          display: block;\n          margin-bottom: 10px;\n        }\n      `}</style>\n    </form>\n  )\n}\n\nconst createPost = gql`\n  mutation createPost($title: String!, $url: String!) {\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }\n`\n\nexport default graphql(createPost, {\n  props: ({ mutate }) => ({\n    createPost: (title, url) =>\n      mutate({\n        variables: { title, url },\n        update: (proxy, { data: { createPost } }) => {\n          const data = proxy.readQuery({\n            query: allPosts,\n            variables: allPostsQueryVars\n          })\n          proxy.writeQuery({\n            query: allPosts,\n            data: {\n              ...data,\n              allPosts: [createPost, ...data.allPosts]\n            },\n            variables: allPostsQueryVars\n          })\n        }\n      })\n  })\n})(Submit)\n"]},"metadata":{},"sourceType":"module"}