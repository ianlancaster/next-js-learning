{"ast":null,"code":"/* global fetch */\nimport { all, call, delay, put, take, takeLatest } from 'redux-saga/effects';\nimport es6promise from 'es6-promise';\nimport 'isomorphic-unfetch';\nimport { actionTypes, failure, loadDataSuccess, tickClock } from './actions';\nes6promise.polyfill();\n\nfunction* runClockSaga() {\n  yield take(actionTypes.START_CLOCK);\n\n  while (true) {\n    yield put(tickClock(false));\n    yield delay(1000);\n  }\n}\n\nfunction* loadDataSaga() {\n  try {\n    const res = yield fetch('https://jsonplaceholder.typicode.com/users');\n    const data = yield res.json();\n    yield put(loadDataSuccess(data));\n  } catch (err) {\n    yield put(failure(err));\n  }\n}\n\nfunction* rootSaga() {\n  yield all([call(runClockSaga), takeLatest(actionTypes.LOAD_DATA, loadDataSaga)]);\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["/Users/ilancaster/Desktop/next-js-learning/boilerplates/with-redux-saga-app/saga.js"],"names":["all","call","delay","put","take","takeLatest","es6promise","actionTypes","failure","loadDataSuccess","tickClock","polyfill","runClockSaga","START_CLOCK","loadDataSaga","res","fetch","data","json","err","rootSaga","LOAD_DATA"],"mappings":"AAAA;AAEA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsCC,UAAtC,QAAwD,oBAAxD;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,oBAAP;AAEA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,EAAgDC,SAAhD,QAAiE,WAAjE;AAEAJ,UAAU,CAACK,QAAX;;AAEA,UAAWC,YAAX,GAA2B;AACzB,QAAMR,IAAI,CAACG,WAAW,CAACM,WAAb,CAAV;;AACA,SAAO,IAAP,EAAa;AACX,UAAMV,GAAG,CAACO,SAAS,CAAC,KAAD,CAAV,CAAT;AACA,UAAMR,KAAK,CAAC,IAAD,CAAX;AACD;AACF;;AAED,UAAWY,YAAX,GAA2B;AACzB,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,UAAMf,GAAG,CAACM,eAAe,CAACQ,IAAD,CAAhB,CAAT;AACD,GAJD,CAIE,OAAOE,GAAP,EAAY;AACZ,UAAMhB,GAAG,CAACK,OAAO,CAACW,GAAD,CAAR,CAAT;AACD;AACF;;AAED,UAAWC,QAAX,GAAuB;AACrB,QAAMpB,GAAG,CAAC,CACRC,IAAI,CAACW,YAAD,CADI,EAERP,UAAU,CAACE,WAAW,CAACc,SAAb,EAAwBP,YAAxB,CAFF,CAAD,CAAT;AAID;;AAED,eAAeM,QAAf","sourcesContent":["/* global fetch */\n\nimport { all, call, delay, put, take, takeLatest } from 'redux-saga/effects'\nimport es6promise from 'es6-promise'\nimport 'isomorphic-unfetch'\n\nimport { actionTypes, failure, loadDataSuccess, tickClock } from './actions'\n\nes6promise.polyfill()\n\nfunction * runClockSaga () {\n  yield take(actionTypes.START_CLOCK)\n  while (true) {\n    yield put(tickClock(false))\n    yield delay(1000)\n  }\n}\n\nfunction * loadDataSaga () {\n  try {\n    const res = yield fetch('https://jsonplaceholder.typicode.com/users')\n    const data = yield res.json()\n    yield put(loadDataSuccess(data))\n  } catch (err) {\n    yield put(failure(err))\n  }\n}\n\nfunction * rootSaga () {\n  yield all([\n    call(runClockSaga),\n    takeLatest(actionTypes.LOAD_DATA, loadDataSaga)\n  ])\n}\n\nexport default rootSaga\n"]},"metadata":{},"sourceType":"module"}