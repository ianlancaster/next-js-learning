{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { exampleInitialState } from './reducer';\nimport rootSaga from './saga';\n\nconst bindMiddleware = middleware => {\n  if (process.env.NODE_ENV !== 'production') {\n    const {\n      composeWithDevTools\n    } = require('redux-devtools-extension');\n\n    return composeWithDevTools(applyMiddleware(...middleware));\n  }\n\n  return applyMiddleware(...middleware);\n};\n\nfunction configureStore(initialState = exampleInitialState) {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(rootReducer, initialState, bindMiddleware([sagaMiddleware]));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nexport default configureStore;","map":{"version":3,"sources":["/Users/ilancaster/Desktop/next-js-learning/boilerplates/with-redux-saga-app/store.js"],"names":["applyMiddleware","createStore","createSagaMiddleware","rootReducer","exampleInitialState","rootSaga","bindMiddleware","middleware","process","env","NODE_ENV","composeWithDevTools","require","configureStore","initialState","sagaMiddleware","store","sagaTask","run"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,IAAsBC,mBAAtB,QAAiD,WAAjD;AACA,OAAOC,QAAP,MAAqB,QAArB;;AAEA,MAAMC,cAAc,GAAGC,UAAU,IAAI;AACnC,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAM;AAAEC,MAAAA;AAAF,QAA0BC,OAAO,CAAC,0BAAD,CAAvC;;AACA,WAAOD,mBAAmB,CAACX,eAAe,CAAC,GAAGO,UAAJ,CAAhB,CAA1B;AACD;;AACD,SAAOP,eAAe,CAAC,GAAGO,UAAJ,CAAtB;AACD,CAND;;AAQA,SAASM,cAAT,CAAyBC,YAAY,GAAGV,mBAAxC,EAA6D;AAC3D,QAAMW,cAAc,GAAGb,oBAAoB,EAA3C;AACA,QAAMc,KAAK,GAAGf,WAAW,CACvBE,WADuB,EAEvBW,YAFuB,EAGvBR,cAAc,CAAC,CAACS,cAAD,CAAD,CAHS,CAAzB;AAMAC,EAAAA,KAAK,CAACC,QAAN,GAAiBF,cAAc,CAACG,GAAf,CAAmBb,QAAnB,CAAjB;AAEA,SAAOW,KAAP;AACD;;AAED,eAAeH,cAAf","sourcesContent":["import { applyMiddleware, createStore } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootReducer, { exampleInitialState } from './reducer'\nimport rootSaga from './saga'\n\nconst bindMiddleware = middleware => {\n  if (process.env.NODE_ENV !== 'production') {\n    const { composeWithDevTools } = require('redux-devtools-extension')\n    return composeWithDevTools(applyMiddleware(...middleware))\n  }\n  return applyMiddleware(...middleware)\n}\n\nfunction configureStore (initialState = exampleInitialState) {\n  const sagaMiddleware = createSagaMiddleware()\n  const store = createStore(\n    rootReducer,\n    initialState,\n    bindMiddleware([sagaMiddleware])\n  )\n\n  store.sagaTask = sagaMiddleware.run(rootSaga)\n\n  return store\n}\n\nexport default configureStore\n"]},"metadata":{},"sourceType":"module"}