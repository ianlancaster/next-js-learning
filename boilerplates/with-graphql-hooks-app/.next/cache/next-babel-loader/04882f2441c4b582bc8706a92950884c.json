{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ilancaster/Desktop/next-js-learning/boilerplates/with-graphql-hooks-app/components/post-list.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { Fragment, useState } from 'react';\nimport { useQuery } from 'graphql-hooks';\nimport ErrorMessage from './error-message';\nimport PostUpvoter from './post-upvoter';\nimport Submit from './submit';\nexport var allPostsQuery = \"\\n  query allPosts($first: Int!, $skip: Int!) {\\n    allPosts(orderBy: createdAt_DESC, first: $first, skip: $skip) {\\n      id\\n      title\\n      votes\\n      url\\n      createdAt\\n    }\\n    _allPostsMeta {\\n      count\\n    }\\n  }\\n\";\nexport default function PostList() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      skip = _useState2[0],\n      setSkip = _useState2[1];\n\n  var _useQuery = useQuery(allPostsQuery, {\n    variables: {\n      skip: skip,\n      first: 10\n    },\n    updateData: function updateData(prevResult, result) {\n      return _objectSpread({}, result, {\n        allPosts: [].concat(_toConsumableArray(prevResult.allPosts), _toConsumableArray(result.allPosts))\n      });\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      refetch = _useQuery.refetch;\n\n  if (error) return React.createElement(ErrorMessage, {\n    message: \"Error loading posts.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n  if (!data) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Loading\");\n  var allPosts = data.allPosts,\n      _allPostsMeta = data._allPostsMeta;\n  var areMorePosts = allPosts.length < _allPostsMeta.count;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Submit, {\n    onSubmission: function onSubmission() {\n      refetch({\n        variables: {\n          skip: 0,\n          first: allPosts.length\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    className: \"jsx-2126052553\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"jsx-2126052553\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, allPosts.map(function (post, index) {\n    return React.createElement(\"li\", {\n      key: post.id,\n      className: \"jsx-2126052553\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jsx-2126052553\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"jsx-2126052553\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, index + 1, \". \"), React.createElement(\"a\", {\n      href: post.url,\n      className: \"jsx-2126052553\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, post.title), React.createElement(PostUpvoter, {\n      id: post.id,\n      votes: post.votes,\n      onUpdate: function onUpdate() {\n        refetch({\n          variables: {\n            skip: 0,\n            first: allPosts.length\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n  })), areMorePosts ? React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setSkip(skip + 10);\n    },\n    className: \"jsx-2126052553\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, ' ', loading && !data ? 'Loading...' : 'Show More', ' ') : '', React.createElement(_JSXStyle, {\n    id: \"2126052553\",\n    __self: this\n  }, \"section.jsx-2126052553{padding-bottom:20px;}li.jsx-2126052553{display:block;margin-bottom:10px;}div.jsx-2126052553{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}a.jsx-2126052553{font-size:14px;margin-right:10px;-webkit-text-decoration:none;text-decoration:none;padding-bottom:0;border:0;}span.jsx-2126052553{font-size:14px;margin-right:5px;}ul.jsx-2126052553{margin:0;padding:0;}button.jsx-2126052553:before{-webkit-align-self:center;-ms-flex-item-align:center;align-self:center;border-style:solid;border-width:6px 4px 0 4px;border-color:#ffffff transparent transparent transparent;content:'';height:0;margin-right:5px;width:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbGFuY2FzdGVyL0Rlc2t0b3AvbmV4dC1qcy1sZWFybmluZy9ib2lsZXJwbGF0ZXMvd2l0aC1ncmFwaHFsLWhvb2tzLWFwcC9jb21wb25lbnRzL3Bvc3QtbGlzdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzRW9CLEFBR2lDLEFBR04sQUFJSyxBQUlKLEFBT0EsQUFJTixBQUlTLFNBSFIsS0FuQlMsQ0FRRCxBQU9ELElBS25CLENBdkJBLFlBbUJBLENBZkEsQUFRdUIsc0NBY0YsWUFiRixPQWNVLEdBcEJkLE9BT0osU0FDWCxRQWEyRCxrREFwQjNELE9BcUJhLFdBQ0YsU0FDUSxpQkFDVCxRQUNWIiwiZmlsZSI6Ii9Vc2Vycy9pbGFuY2FzdGVyL0Rlc2t0b3AvbmV4dC1qcy1sZWFybmluZy9ib2lsZXJwbGF0ZXMvd2l0aC1ncmFwaHFsLWhvb2tzLWFwcC9jb21wb25lbnRzL3Bvc3QtbGlzdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBGcmFnbWVudCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHVzZVF1ZXJ5IH0gZnJvbSAnZ3JhcGhxbC1ob29rcydcbmltcG9ydCBFcnJvck1lc3NhZ2UgZnJvbSAnLi9lcnJvci1tZXNzYWdlJ1xuaW1wb3J0IFBvc3RVcHZvdGVyIGZyb20gJy4vcG9zdC11cHZvdGVyJ1xuaW1wb3J0IFN1Ym1pdCBmcm9tICcuL3N1Ym1pdCdcblxuZXhwb3J0IGNvbnN0IGFsbFBvc3RzUXVlcnkgPSBgXG4gIHF1ZXJ5IGFsbFBvc3RzKCRmaXJzdDogSW50ISwgJHNraXA6IEludCEpIHtcbiAgICBhbGxQb3N0cyhvcmRlckJ5OiBjcmVhdGVkQXRfREVTQywgZmlyc3Q6ICRmaXJzdCwgc2tpcDogJHNraXApIHtcbiAgICAgIGlkXG4gICAgICB0aXRsZVxuICAgICAgdm90ZXNcbiAgICAgIHVybFxuICAgICAgY3JlYXRlZEF0XG4gICAgfVxuICAgIF9hbGxQb3N0c01ldGEge1xuICAgICAgY291bnRcbiAgICB9XG4gIH1cbmBcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUG9zdExpc3QgKCkge1xuICBjb25zdCBbc2tpcCwgc2V0U2tpcF0gPSB1c2VTdGF0ZSgwKVxuICBjb25zdCB7IGxvYWRpbmcsIGVycm9yLCBkYXRhLCByZWZldGNoIH0gPSB1c2VRdWVyeShhbGxQb3N0c1F1ZXJ5LCB7XG4gICAgdmFyaWFibGVzOiB7IHNraXAsIGZpcnN0OiAxMCB9LFxuICAgIHVwZGF0ZURhdGE6IChwcmV2UmVzdWx0LCByZXN1bHQpID0+ICh7XG4gICAgICAuLi5yZXN1bHQsXG4gICAgICBhbGxQb3N0czogWy4uLnByZXZSZXN1bHQuYWxsUG9zdHMsIC4uLnJlc3VsdC5hbGxQb3N0c11cbiAgICB9KVxuICB9KVxuXG4gIGlmIChlcnJvcikgcmV0dXJuIDxFcnJvck1lc3NhZ2UgbWVzc2FnZT0nRXJyb3IgbG9hZGluZyBwb3N0cy4nIC8+XG4gIGlmICghZGF0YSkgcmV0dXJuIDxkaXY+TG9hZGluZzwvZGl2PlxuXG4gIGNvbnN0IHsgYWxsUG9zdHMsIF9hbGxQb3N0c01ldGEgfSA9IGRhdGFcblxuICBjb25zdCBhcmVNb3JlUG9zdHMgPSBhbGxQb3N0cy5sZW5ndGggPCBfYWxsUG9zdHNNZXRhLmNvdW50XG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPFN1Ym1pdFxuICAgICAgICBvblN1Ym1pc3Npb249eygpID0+IHtcbiAgICAgICAgICByZWZldGNoKHsgdmFyaWFibGVzOiB7IHNraXA6IDAsIGZpcnN0OiBhbGxQb3N0cy5sZW5ndGggfSB9KVxuICAgICAgICB9fVxuICAgICAgLz5cbiAgICAgIDxzZWN0aW9uPlxuICAgICAgICA8dWw+XG4gICAgICAgICAge2FsbFBvc3RzLm1hcCgocG9zdCwgaW5kZXgpID0+IChcbiAgICAgICAgICAgIDxsaSBrZXk9e3Bvc3QuaWR9PlxuICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIDxzcGFuPntpbmRleCArIDF9LiA8L3NwYW4+XG4gICAgICAgICAgICAgICAgPGEgaHJlZj17cG9zdC51cmx9Pntwb3N0LnRpdGxlfTwvYT5cbiAgICAgICAgICAgICAgICA8UG9zdFVwdm90ZXJcbiAgICAgICAgICAgICAgICAgIGlkPXtwb3N0LmlkfVxuICAgICAgICAgICAgICAgICAgdm90ZXM9e3Bvc3Qudm90ZXN9XG4gICAgICAgICAgICAgICAgICBvblVwZGF0ZT17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZWZldGNoKHsgdmFyaWFibGVzOiB7IHNraXA6IDAsIGZpcnN0OiBhbGxQb3N0cy5sZW5ndGggfSB9KVxuICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvdWw+XG4gICAgICAgIHthcmVNb3JlUG9zdHMgPyAoXG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBzZXRTa2lwKHNraXAgKyAxMCl9PlxuICAgICAgICAgICAgeycgJ31cbiAgICAgICAgICAgIHtsb2FkaW5nICYmICFkYXRhID8gJ0xvYWRpbmcuLi4nIDogJ1Nob3cgTW9yZSd9eycgJ31cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICAnJ1xuICAgICAgICApfVxuICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgc2VjdGlvbiB7XG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgICAgICAgICB9XG4gICAgICAgICAgbGkge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICAgIH1cbiAgICAgICAgICBkaXYge1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgfVxuICAgICAgICAgIGEge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgICAgfVxuICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gICAgICAgICAgfVxuICAgICAgICAgIHVsIHtcbiAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJ1dHRvbjpiZWZvcmUge1xuICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgICAgICAgIGJvcmRlci13aWR0aDogNnB4IDRweCAwIDRweDtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogI2ZmZmZmZiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gICAgICAgICAgICB3aWR0aDogMDtcbiAgICAgICAgICB9XG4gICAgICAgIGB9PC9zdHlsZT5cbiAgICAgIDwvc2VjdGlvbj5cbiAgICA8L0ZyYWdtZW50PlxuICApXG59XG4iXX0= */\\n/*@ sourceURL=/Users/ilancaster/Desktop/next-js-learning/boilerplates/with-graphql-hooks-app/components/post-list.js */\")));\n}","map":{"version":3,"sources":["/Users/ilancaster/Desktop/next-js-learning/boilerplates/with-graphql-hooks-app/components/post-list.js"],"names":["React","Fragment","useState","useQuery","ErrorMessage","PostUpvoter","Submit","allPostsQuery","PostList","skip","setSkip","variables","first","updateData","prevResult","result","allPosts","loading","error","data","refetch","_allPostsMeta","areMorePosts","length","count","map","post","index","id","url","title","votes"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport { useQuery } from 'graphql-hooks'\nimport ErrorMessage from './error-message'\nimport PostUpvoter from './post-upvoter'\nimport Submit from './submit'\n\nexport const allPostsQuery = `\n  query allPosts($first: Int!, $skip: Int!) {\n    allPosts(orderBy: createdAt_DESC, first: $first, skip: $skip) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n    _allPostsMeta {\n      count\n    }\n  }\n`\n\nexport default function PostList () {\n  const [skip, setSkip] = useState(0)\n  const { loading, error, data, refetch } = useQuery(allPostsQuery, {\n    variables: { skip, first: 10 },\n    updateData: (prevResult, result) => ({\n      ...result,\n      allPosts: [...prevResult.allPosts, ...result.allPosts]\n    })\n  })\n\n  if (error) return <ErrorMessage message='Error loading posts.' />\n  if (!data) return <div>Loading</div>\n\n  const { allPosts, _allPostsMeta } = data\n\n  const areMorePosts = allPosts.length < _allPostsMeta.count\n  return (\n    <Fragment>\n      <Submit\n        onSubmission={() => {\n          refetch({ variables: { skip: 0, first: allPosts.length } })\n        }}\n      />\n      <section>\n        <ul>\n          {allPosts.map((post, index) => (\n            <li key={post.id}>\n              <div>\n                <span>{index + 1}. </span>\n                <a href={post.url}>{post.title}</a>\n                <PostUpvoter\n                  id={post.id}\n                  votes={post.votes}\n                  onUpdate={() => {\n                    refetch({ variables: { skip: 0, first: allPosts.length } })\n                  }}\n                />\n              </div>\n            </li>\n          ))}\n        </ul>\n        {areMorePosts ? (\n          <button onClick={() => setSkip(skip + 10)}>\n            {' '}\n            {loading && !data ? 'Loading...' : 'Show More'}{' '}\n          </button>\n        ) : (\n          ''\n        )}\n        <style jsx>{`\n          section {\n            padding-bottom: 20px;\n          }\n          li {\n            display: block;\n            margin-bottom: 10px;\n          }\n          div {\n            align-items: center;\n            display: flex;\n          }\n          a {\n            font-size: 14px;\n            margin-right: 10px;\n            text-decoration: none;\n            padding-bottom: 0;\n            border: 0;\n          }\n          span {\n            font-size: 14px;\n            margin-right: 5px;\n          }\n          ul {\n            margin: 0;\n            padding: 0;\n          }\n          button:before {\n            align-self: center;\n            border-style: solid;\n            border-width: 6px 4px 0 4px;\n            border-color: #ffffff transparent transparent transparent;\n            content: '';\n            height: 0;\n            margin-right: 5px;\n            width: 0;\n          }\n        `}</style>\n      </section>\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}