{"ast":null,"code":"import { GraphQLClient } from 'graphql-hooks';\nimport memCache from 'graphql-hooks-memcache';\nimport unfetch from 'isomorphic-unfetch';\nvar graphQLClient = null;\n\nfunction create() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return new GraphQLClient({\n    ssrMode: typeof window === 'undefined',\n    url: 'https://api.graph.cool/simple/v1/cixmkt2ul01q00122mksg82pn',\n    cache: memCache({\n      initialState: initialState\n    }),\n    fetch: typeof window !== 'undefined' ? fetch.bind() : unfetch // eslint-disable-line\n\n  });\n}\n\nexport default function initGraphQL(initialState) {\n  // Make sure to create a new client for every server-side request so that data\n  // isn't shared between connections (which would be bad)\n  if (typeof window === 'undefined') {\n    return create(initialState);\n  } // Reuse client on the client-side\n\n\n  if (!graphQLClient) {\n    graphQLClient = create(initialState);\n  }\n\n  return graphQLClient;\n}","map":{"version":3,"sources":["/Users/ilancaster/Desktop/next-js-learning/boilerplates/with-graphql-hooks-app/lib/init-graphql.js"],"names":["GraphQLClient","memCache","unfetch","graphQLClient","create","initialState","ssrMode","window","url","cache","fetch","bind","initGraphQL"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,IAAIC,aAAa,GAAG,IAApB;;AAEA,SAASC,MAAT,GAAoC;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AAClC,SAAO,IAAIL,aAAJ,CAAkB;AACvBM,IAAAA,OAAO,EAAE,OAAOC,MAAP,KAAkB,WADJ;AAEvBC,IAAAA,GAAG,EAAE,4DAFkB;AAGvBC,IAAAA,KAAK,EAAER,QAAQ,CAAC;AAAEI,MAAAA,YAAY,EAAZA;AAAF,KAAD,CAHQ;AAIvBK,IAAAA,KAAK,EAAE,OAAOH,MAAP,KAAkB,WAAlB,GAAgCG,KAAK,CAACC,IAAN,EAAhC,GAA+CT,OAJ/B,CAIwC;;AAJxC,GAAlB,CAAP;AAMD;;AAED,eAAe,SAASU,WAAT,CAAsBP,YAAtB,EAAoC;AACjD;AACA;AACA,MAAI,OAAOE,MAAP,KAAkB,WAAtB,EAAmC;AACjC,WAAOH,MAAM,CAACC,YAAD,CAAb;AACD,GALgD,CAOjD;;;AACA,MAAI,CAACF,aAAL,EAAoB;AAClBA,IAAAA,aAAa,GAAGC,MAAM,CAACC,YAAD,CAAtB;AACD;;AAED,SAAOF,aAAP;AACD","sourcesContent":["import { GraphQLClient } from 'graphql-hooks'\nimport memCache from 'graphql-hooks-memcache'\nimport unfetch from 'isomorphic-unfetch'\n\nlet graphQLClient = null\n\nfunction create (initialState = {}) {\n  return new GraphQLClient({\n    ssrMode: typeof window === 'undefined',\n    url: 'https://api.graph.cool/simple/v1/cixmkt2ul01q00122mksg82pn',\n    cache: memCache({ initialState }),\n    fetch: typeof window !== 'undefined' ? fetch.bind() : unfetch, // eslint-disable-line\n  })\n}\n\nexport default function initGraphQL (initialState) {\n  // Make sure to create a new client for every server-side request so that data\n  // isn't shared between connections (which would be bad)\n  if (typeof window === 'undefined') {\n    return create(initialState)\n  }\n\n  // Reuse client on the client-side\n  if (!graphQLClient) {\n    graphQLClient = create(initialState)\n  }\n\n  return graphQLClient\n}\n"]},"metadata":{},"sourceType":"module"}