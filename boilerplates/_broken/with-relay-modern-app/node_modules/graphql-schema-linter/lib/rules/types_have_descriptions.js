'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TypesHaveDescriptions = TypesHaveDescriptions;

var _buildASTSchema = require('graphql/utilities/buildASTSchema');

var _error = require('graphql/error');

function TypesHaveDescriptions(context) {
  return {
    TypeExtensionDefinition: function TypeExtensionDefinition(node) {
      return false;
    },
    InterfaceTypeDefinition: function InterfaceTypeDefinition(node) {
      if ((0, _buildASTSchema.getDescription)(node)) {
        return;
      }

      var interfaceTypeName = node.name.value;

      context.reportError(new _error.GraphQLError('The interface type `' + interfaceTypeName + '` is missing a description.', [node]));
    },
    ObjectTypeDefinition: function ObjectTypeDefinition(node) {
      if ((0, _buildASTSchema.getDescription)(node)) {
        return;
      }

      var objectTypeName = node.name.value;

      context.reportError(new _error.GraphQLError('The object type `' + objectTypeName + '` is missing a description.', [node]));
    }
  };
}